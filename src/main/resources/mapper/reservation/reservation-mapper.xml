<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.acorn.api.repository.reservation.ReservationRepository">
    <resultMap id="reservationResultMap"            type="com.acorn.api.entity.reservation.Reservation">
        <id property="rowNum"                       column="ROW_NUM"/>
        <id property="reservationId"                column="RESERVATION_ID"/>
        <result property="reservationTid"           column="RESERVATION_TID"/>
        <result property="reservationUserId"        column="RESERVATION_USER_ID"/>
        <result property="reservationContainerId"   column="RESERVATION_CONTAINER_ID"/>
        <result property="reservationStatus"        column="RESERVATION_STATUS"/>
        <result property="reservationStartDate"     column="RESERVATION_START_DATE"/>
        <result property="reservationEndDate"       column="RESERVATION_END_DATE"/>
        <result property="reservationCreated"       column="RESERVATION_CREATED"/>
        <result property="reservationUpdated"       column="RESERVATION_UPDATED"/>
        <association property="user"                javaType="com.acorn.api.entity.user.User" resultMap="com.acorn.api.repository.user.UserRepository.userResultMap"/>
        <association property="container"           javaType="com.acorn.api.entity.container.Container" resultMap="com.acorn.api.repository.container.ContainerRepository.containerResultMap"/>
        <association property="payment"             javaType="com.acorn.api.entity.payment.Payment" resultMap="com.acorn.api.repository.payment.PaymentRepository.paymentResultMap"/>
    </resultMap>

    <select id="selectReservationIdKey" resultType="Integer">
        SELECT nextval(RESERVATION_SEQ)
    </select>

    <select id="selectListCountByRequest" parameterType="com.acorn.api.common.PaginationRequest" resultType="Integer">
        SELECT
            COUNT(R.RESERVATION_ID)
        FROM
            TB_RESERVATION R
        INNER JOIN
            TB_CONTAINER C
        ON R.RESERVATION_CONTAINER_ID = C.CONTAINER_ID
        INNER JOIN
            TB_OWNER O
        ON C.CONTAINER_OWNER_ID = O.OWNER_ID
        <where>
            R.RESERVATION_USER_ID = #{reservationUserId}
            <if test="searchType == 'containerName' and searchName != null and searchName.trim() != ''">
                AND C.CONTAINER_NAME LIKE CONCAT('%', TRIM(#{searchName}), '%')
            </if>
            <if test="searchType == 'reservationStatus' and searchName != null and searchName.trim() != ''">
                AND R.RESERVATION_STATUS = #{searchName}
            </if>
        </where>
    </select>

    <select id="selectReservationContainerCountByRequest" parameterType="com.acorn.api.common.PaginationRequest" resultType="Integer">
        SELECT
            COUNT(R.RESERVATION_ID)
        FROM
            TB_RESERVATION R
        INNER JOIN
            TB_CONTAINER C
        ON R.RESERVATION_CONTAINER_ID = C.CONTAINER_ID
        INNER JOIN
            TB_USER U
        ON R.RESERVATION_USER_ID = U.USER_ID
        LEFT OUTER JOIN
            TB_PAYMENT P
        ON R.RESERVATION_ID = P.PAYMENT_RESERVATION_ID
        <where>
            C.CONTAINER_OWNER_ID = #{containerOwnerId}
            <if test="searchType == 'containerName' and searchName != null and searchName.trim() != ''">
                AND C.CONTAINER_NAME LIKE CONCAT('%', TRIM(#{searchName}), '%')
            </if>
            <if test="searchType == 'userNm' and searchName != null and searchName.trim() != ''">
                AND U.USER_NM LIKE CONCAT('%', TRIM(#{searchName}), '%')
            </if>
            <if test="searchType == 'reservationStatus' and searchName != null and searchName.trim() != ''">
                AND R.RESERVATION_STATUS = #{searchName}
            </if>
            <if test="searchType == 'paymentStatus' and searchName != null and searchName.trim() != ''">
                AND P.PAYMENT_STATUS = #{searchName}
            </if>
        </where>
    </select>

    <select id="selectReservationListData" parameterType="com.acorn.api.common.PaginationRequest" resultMap="reservationResultMap">
        SELECT
            ROW_NUMBER() OVER (ORDER BY R.RESERVATION_CREATED ASC) AS ROW_NUM,
            R.RESERVATION_ID,
            R.RESERVATION_USER_ID,
            R.RESERVATION_CONTAINER_ID,
            R.RESERVATION_STATUS,
            R.RESERVATION_START_DATE,
            R.RESERVATION_END_DATE,
            R.RESERVATION_CREATED,
            C.CONTAINER_NAME,
            C.CONTAINER_ADDRESS,
            O.OWNER_COMPANY_NAME
        FROM
            TB_RESERVATION R
        INNER JOIN
            TB_CONTAINER C
        ON R.RESERVATION_CONTAINER_ID = C.CONTAINER_ID
        INNER JOIN
            TB_OWNER O
        ON C.CONTAINER_OWNER_ID = O.OWNER_ID
        <where>
            R.RESERVATION_USER_ID = #{reservationUserId}
            <if test="searchType == 'containerName' and searchName != null and searchName.trim() != ''">
                AND C.CONTAINER_NAME LIKE CONCAT('%', TRIM(#{searchName}), '%')
            </if>
            <if test="searchType == 'ownerCompanyName' and searchName != null and searchName.trim() != ''">
                AND O.OWNER_COMPANY_NAME LIKE CONCAT('%', TRIM(#{searchName}), '%')
            </if>
            <if test="searchType == 'reservationStatus' and searchName != null and searchName.trim() != ''">
                AND R.RESERVATION_STATUS = #{searchName}
            </if>
        </where>
        ORDER BY R.RESERVATION_CREATED DESC
        LIMIT #{startRowNum}, #{pageSize}
    </select>

    <select id="selectReservationContainerListData" parameterType="com.acorn.api.common.PaginationRequest" resultMap="reservationResultMap">
        SELECT
            R.RESERVATION_ID,
            R.RESERVATION_STATUS,
            C.CONTAINER_NAME,
            U.USER_NM,
            P.PAYMENT_STATUS
        FROM
            TB_RESERVATION R
        INNER JOIN
            TB_CONTAINER C
        ON R.RESERVATION_CONTAINER_ID = C.CONTAINER_ID
        INNER JOIN
            TB_USER U
        ON R.RESERVATION_USER_ID = U.USER_ID
        LEFT OUTER JOIN
            TB_PAYMENT P
        ON R.RESERVATION_ID = P.PAYMENT_RESERVATION_ID
        <where>
            C.CONTAINER_OWNER_ID = #{containerOwnerId}
            <if test="searchType == 'containerName' and searchName != null and searchName.trim() != ''">
                AND C.CONTAINER_NAME LIKE CONCAT('%', TRIM(#{searchName}), '%')
            </if>
            <if test="searchType == 'userNm' and searchName != null and searchName.trim() != ''">
                AND U.USER_NM LIKE CONCAT('%', TRIM(#{searchName}), '%')
            </if>
            <if test="searchType == 'reservationStatus' and searchName != null and searchName.trim() != ''">
                AND R.RESERVATION_STATUS = #{searchName}
            </if>
            <if test="searchType == 'paymentStatus' and searchName != null and searchName.trim() != ''">
                AND P.PAYMENT_STATUS = #{searchName}
            </if>
        </where>
        ORDER BY R.RESERVATION_CREATED DESC
        LIMIT #{startRowNum}, #{pageSize}
    </select>

    <select id="selectReservationByUserId" parameterType="Integer" resultMap="reservationResultMap">
        SELECT
            U.USER_ID,
            R.RESERVATION_USER_ID,
            R.RESERVATION_STATUS
        FROM
            TB_USER U
                INNER JOIN
            TB_RESERVATION R
            ON U.USER_ID = R.RESERVATION_USER_ID
        WHERE U.USER_ID = #{userId}
    </select>

    <select id="selectReservationByUserIdAndStatus" parameterType="map" resultMap="reservationResultMap">
        SELECT
            RESERVATION_ID,
            RESERVATION_TID,
            RESERVATION_USER_ID,
            RESERVATION_CONTAINER_ID,
            RESERVATION_STATUS,
            RESERVATION_START_DATE,
            RESERVATION_END_DATE
        FROM
            TB_RESERVATION
        WHERE
            RESERVATION_USER_ID = #{reservationUserId}
        AND
            RESERVATION_STATUS IN
        <foreach item="reservationStatus" collection="reservationStatus" open="(" separator="," close=")">
            #{reservationStatus}
        </foreach>
    </select>

    <select id="selectExpiredPendingReservations" parameterType="java.time.LocalDateTime" resultType="Integer">
        <![CDATA[
            SELECT
                RESERVATION_ID
            FROM
                TB_RESERVATION
            WHERE
                RESERVATION_STATUS = 0
            AND
                RESERVATION_START_DATE IS NULL
            AND
                RESERVATION_END_DATE IS NULL
            AND
                RESERVATION_CREATED <= #{threeDaysAgo}
        ]]>
    </select>

    <select id="selectExpiredReservation" parameterType="java.time.LocalDateTime" resultType="Integer">
        <![CDATA[
            SELECT
                RESERVATION_ID
            FROM
                TB_RESERVATION
            WHERE
                RESERVATION_STATUS = 1
            AND
                RESERVATION_START_DATE IS NOT NULL
            AND
                RESERVATION_END_DATE IS NOT NULL
            AND
                RESERVATION_END_DATE <= #{todayNoon}
        ]]>
    </select>

    <select id="selectReservationDetailData" parameterType="Integer" resultMap="reservationResultMap">
        SELECT
            R.RESERVATION_ID,
            R.RESERVATION_TID,
            R.RESERVATION_USER_ID,
            R.RESERVATION_CONTAINER_ID,
            R.RESERVATION_STATUS,
            R.RESERVATION_START_DATE,
            R.RESERVATION_END_DATE,
            C.CONTAINER_ID,
            C.CONTAINER_NAME,
            C.CONTAINER_ADDRESS,
            C.CONTAINER_PRICE,
            O.OWNER_NM,
            O.OWNER_COMPANY_NAME
        FROM
            TB_RESERVATION R
                INNER JOIN
            TB_CONTAINER C
            ON R.RESERVATION_CONTAINER_ID = C.CONTAINER_ID
                INNER JOIN
            TB_OWNER O
            ON C.CONTAINER_OWNER_ID = O.OWNER_ID
        WHERE
            R.RESERVATION_ID = #{reservationId}
    </select>

    <select id="selectReservationContainerId" parameterType="Integer" resultType="Integer">
        SELECT
            RESERVATION_CONTAINER_ID
        FROM
            TB_RESERVATION
        WHERE
            RESERVATION_ID = #{reservationId}
    </select>

    <select id="existsActiveReservationByRequest" parameterType="map" resultType="Boolean">
        SELECT EXISTS (
            SELECT 1
            FROM
                TB_RESERVATION
            WHERE
                RESERVATION_CONTAINER_ID = #{containerId}
              AND RESERVATION_STATUS = #{reservationStatus}
        )
    </select>

    <insert id="insertReservation" parameterType="com.acorn.api.entity.reservation.Reservation" useGeneratedKeys="true" keyProperty="reservationId">
        INSERT INTO TB_RESERVATION (
            RESERVATION_ID,
            RESERVATION_USER_ID,
            RESERVATION_CONTAINER_ID,
            RESERVATION_STATUS,
            RESERVATION_CREATED
        )
        VALUES (
            #{reservationId},
            #{reservationUserId},
            #{reservationContainerId},
            #{reservationStatus},
            NOW()
        )
    </insert>

    <update id="updateReservationTid" parameterType="map">
        UPDATE
            TB_RESERVATION
        SET
            RESERVATION_TID = #{reservationTid}
        WHERE
            RESERVATION_ID = #{reservationId}
    </update>

    <update id="updateReservation" parameterType="com.acorn.api.entity.reservation.Reservation">
        UPDATE
            TB_RESERVATION
        SET
            RESERVATION_START_DATE = #{reservationStartDate},
            RESERVATION_END_DATE = #{reservationEndDate},
            RESERVATION_STATUS = #{reservationStatus},
            RESERVATION_UPDATED = NOW()
        WHERE
            RESERVATION_ID = #{reservationId}
    </update>

    <update id="updateReservationStatus" parameterType="com.acorn.api.entity.reservation.Reservation">
        UPDATE
            TB_RESERVATION
        SET
            RESERVATION_STATUS = #{reservationStatus},
            RESERVATION_UPDATED = NOW()
        WHERE
            RESERVATION_ID = #{reservationId}
    </update>
</mapper>